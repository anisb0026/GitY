<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-26T03:50:01 CEST" name="Loan Departement" finished-at="2021-06-26T03:50:02 CEST" duration-ms="909">
    <groups>
      <group name="smoke">
        <method signature="Day1.Demo2()[pri:0, instance:test.Day1@7a419da4]" name="Demo2" class="test.Day1"/>
        <method signature="Day3.WebLoginHomeLoan()[pri:0, instance:test.Day3@4d5b6aac]" name="WebLoginHomeLoan" class="test.Day3"/>
        <method signature="Day4.MobileLoginCarLoan()[pri:0, instance:test.Day4@6fd83fc1]" name="MobileLoginCarLoan" class="test.Day4"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2021-06-26T03:50:01 CEST" name="Personnal Loan" finished-at="2021-06-26T03:50:02 CEST" duration-ms="482">
      <class name="test.Day1">
        <test-method is-config="true" signature="bfrclass()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="bfrclass" finished-at="2021-06-26T03:50:01 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfrclass -->
        <test-method is-config="true" signature="bfrMethhod()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="bfrMethhod" finished-at="2021-06-26T03:50:01 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfrMethhod -->
        <test-method signature="Demo0()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="Demo0" finished-at="2021-06-26T03:50:01 CEST" duration-ms="37" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.Demo0(Day1.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo0 -->
        <test-method is-config="true" signature="aftrMethod()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="aftrMethod" finished-at="2021-06-26T03:50:01 CEST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftrMethod -->
        <test-method is-config="true" signature="bfrMethhod()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="bfrMethhod" finished-at="2021-06-26T03:50:01 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfrMethhod -->
        <test-method signature="Demo1(java.lang.String)[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="Demo1" finished-at="2021-06-26T03:50:01 CEST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PersoonalLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo1 -->
        <test-method is-config="true" signature="aftrMethod()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="aftrMethod" finished-at="2021-06-26T03:50:01 CEST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftrMethod -->
        <test-method is-config="true" signature="bfrMethhod()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="bfrMethhod" finished-at="2021-06-26T03:50:01 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfrMethhod -->
        <test-method signature="Demo2()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="Demo2" finished-at="2021-06-26T03:50:01 CEST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo2 -->
        <test-method is-config="true" signature="aftrMethod()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="aftrMethod" finished-at="2021-06-26T03:50:01 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftrMethod -->
        <test-method is-config="true" signature="aftrclass()[pri:0, instance:test.Day1@7a419da4]" started-at="2021-06-26T03:50:01 CEST" name="aftrclass" finished-at="2021-06-26T03:50:01 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftrclass -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method signature="Demo1(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@10d307f1]" started-at="2021-06-26T03:50:01 CEST" name="Demo1" data-provider="getData" finished-at="2021-06-26T03:50:01 CEST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo1 -->
        <test-method signature="Demo1(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@10d307f1]" started-at="2021-06-26T03:50:01 CEST" name="Demo1" data-provider="getData" finished-at="2021-06-26T03:50:01 CEST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo1 -->
        <test-method signature="Demo1(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@10d307f1]" started-at="2021-06-26T03:50:01 CEST" name="Demo1" data-provider="getData" finished-at="2021-06-26T03:50:01 CEST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo1 -->
      </class> <!-- test.Day2 -->
      <class name="test.Day3">
        <test-method is-config="true" signature="bfttest()[pri:0, instance:test.Day3@4d5b6aac]" started-at="2021-06-26T03:50:01 CEST" name="bfttest" finished-at="2021-06-26T03:50:01 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfttest -->
        <test-method signature="APILoginHomeLoan()[pri:0, instance:test.Day3@4d5b6aac]" started-at="2021-06-26T03:50:01 CEST" name="APILoginHomeLoan" finished-at="2021-06-26T03:50:01 CEST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginHomeLoan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.Day3@4d5b6aac]" started-at="2021-06-26T03:50:02 CEST" name="MobileLoginHomeLoan" finished-at="2021-06-26T03:50:02 CEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="WebLoginHomeLoan()[pri:0, instance:test.Day3@4d5b6aac]" started-at="2021-06-26T03:50:02 CEST" name="WebLoginHomeLoan" finished-at="2021-06-26T03:50:02 CEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeLoan -->
        <test-method is-config="true" signature="afttest()[pri:0, instance:test.Day3@4d5b6aac]" started-at="2021-06-26T03:50:02 CEST" name="afttest" finished-at="2021-06-26T03:50:02 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afttest -->
      </class> <!-- test.Day3 -->
    </test> <!-- Personnal Loan -->
    <test started-at="2021-06-26T03:50:02 CEST" name="Car Loan" finished-at="2021-06-26T03:50:02 CEST" duration-ms="70">
      <class name="test.Day4">
        <test-method is-config="true" signature="bfrsuite()[pri:0, instance:test.Day4@6fd83fc1]" started-at="2021-06-26T03:50:01 CEST" name="bfrsuite" finished-at="2021-06-26T03:50:01 CEST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfrsuite -->
        <test-method signature="APILoginCarLoan()[pri:0, instance:test.Day4@6fd83fc1]" started-at="2021-06-26T03:50:02 CEST" name="APILoginCarLoan" finished-at="2021-06-26T03:50:02 CEST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarLoan -->
        <test-method signature="MobileLoginCarLoan()[pri:0, instance:test.Day4@6fd83fc1]" started-at="2021-06-26T03:50:02 CEST" name="MobileLoginCarLoan" finished-at="2021-06-26T03:50:02 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method signature="WebLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@6fd83fc1]" started-at="2021-06-26T03:50:02 CEST" name="WebLoginCarLoan" finished-at="2021-06-26T03:50:02 CEST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CarLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarLoan -->
        <test-method is-config="true" signature="aftrsuite()[pri:0, instance:test.Day4@6fd83fc1]" started-at="2021-06-26T03:50:02 CEST" name="aftrsuite" finished-at="2021-06-26T03:50:02 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftrsuite -->
      </class> <!-- test.Day4 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Departement -->
</testng-results>
